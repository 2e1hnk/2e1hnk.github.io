<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title>
        2E1HNK activation blog full text feed    </title>
        <link href="/blog\atom.xml" rel="self" />
    
        <link href="/"/>
    
        
    <updated>2019-05-08T10:55:23Z</updated>

    <id>/blog/atom.xml/</id>

            <entry>
            <title type="html">Emsystech RaspiLCD</title>
            <author><name>Matt, 2E1HNK</name></author>
            <link href="/blog/emsystech-raspi-lcd.html"/>
            <updated>2019-04-22T23:00:00Z</updated>
            <published>2019-04-22T23:00:00Z</published>
            <id>/blog/emsystech-raspi-lcd.html</id>
                        <category   scheme="/blog/tags"
                        term="Raspberry Pi"
                        label="Raspberry Pi" />
            
            <content type="html">
                                &lt;p&gt;A number of years ago I bought a neat little &lt;span class=&#34;caps&#34;&gt;LCD&lt;/span&gt;/Button add-on module for my 1st Gen Raspberry Pi. The company that produced these (Emsystech Engineering, Germany) no longer produce them and they no longer host information about them on their website. This is a mirror of the info that I&amp;#8217;ve managed to collate from a number of sources, primarily the &lt;a href=&#34;https://archive.org/web/&#34;&gt;Wayback Machine&lt;/a&gt;.
The following is text that has been copied from Emsystech&amp;#8217;s website after being auto-translated by Google, as the original was in German which I don&amp;#8217;t understand. It has been lightly edited to remove information that is either no longer relevant or refers to websites/products that can no longer be found and to include additional information that was not originally provided (or available to) Emsystech. This includes projects that have implemented support for the module in other programming languages. I have also corrected some of Google Translate idiosyncrasies. I&amp;#8217;ve kept it here for my own reference, and to assist anyone else who may have purchased these modules and is struggling to find information on them. I can&amp;#8217;t offer any support on the product itself, other than by providing the information present&amp;nbsp;here.&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;&lt;img alt=&#34;RaspiLCD 1&#34; src=&#34;/media/images/raspberrypi-lcd-display-1.jpg&#34; title=&#34;RaspiLCD 1&#34; /&gt;
&lt;img alt=&#34;RaspiLCD 2&#34; src=&#34;/media/images/raspberrypi-lcd-display-2.jpg&#34; title=&#34;RaspiLCD 2&#34; /&gt;
&lt;img alt=&#34;RaspiLCD 1&#34; src=&#34;/media/images/Raspi-LCD-1.jpg&#34; title=&#34;RaspiLCD 1&#34; /&gt;
&lt;img alt=&#34;RaspiLCD with PI R2&#34; src=&#34;/media/images/Raspi-LCD-Mit-Rev2.0.jpg&#34; title=&#34;RaspiLCD with RPi 2&#34; /&gt;
&lt;img alt=&#34;RaspiLCD Retro&#34; src=&#34;/media/images/Raspi-LCD-Retro-1.jpg&#34; title=&#34;RaspiLCD Retro&#34; /&gt;&lt;/p&gt;
&lt;p&gt;With this module, a Raspberry Pi can be extended by a display and buttons. For many applications, a typical &lt;span class=&#34;caps&#34;&gt;PC&lt;/span&gt; monitor and keyboard is too large and unwieldy. This gap closes the Raspi &lt;span class=&#34;caps&#34;&gt;LCD&lt;/span&gt;. Projects such as web radios, streaming clients, home automation systems, &amp;#8230; can use this hardware. The circuit and a source code in C are available as open source. The basic &amp;#8220;driver functionality&amp;#8221; and necessary hardware access functions are implemented in this sample application. The keyboard area can be equipped with various buttons or separated. On the back of pads for receiving pin headers are already&amp;nbsp;provided.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1.8 inch&amp;nbsp;display&lt;/li&gt;
&lt;li&gt;Software adjustable&amp;nbsp;contrast&lt;/li&gt;
&lt;li&gt;White &lt;span class=&#34;caps&#34;&gt;LED&lt;/span&gt; backlight (software&amp;nbsp;controllable)&lt;/li&gt;
&lt;li&gt;5 buttons (6 × 6 or&amp;nbsp;12x12mm)&lt;/li&gt;
&lt;li&gt;Connection possibility for &lt;span class=&#34;caps&#34;&gt;UART&lt;/span&gt; and &lt;span class=&#34;caps&#34;&gt;I2C&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Reference&amp;nbsp;Documents&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/media/pdf/Raspi-LCD-SCHEMATIC.pdf&#34;&gt;Raspi-&lt;span class=&#34;caps&#34;&gt;LCD&lt;/span&gt; (&lt;span class=&#34;caps&#34;&gt;SCHEMATIC&lt;/span&gt;)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/media/pdf/Raspi-LCD-MECHANIC.pdf&#34;&gt;Raspi-&lt;span class=&#34;caps&#34;&gt;LCD&lt;/span&gt; (&lt;span class=&#34;caps&#34;&gt;MECHANIC&lt;/span&gt;)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/media/pdf/Raspi-LCD-PLACE.pdf&#34;&gt;Raspi-&lt;span class=&#34;caps&#34;&gt;LCD&lt;/span&gt; (&lt;span class=&#34;caps&#34;&gt;PLACE&lt;/span&gt;)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/media/zip/RaspiLCD-V0.9.0.zip&#34;&gt;RaspiLCD V0.9.0 (Open-Source / &lt;span class=&#34;caps&#34;&gt;GPL&lt;/span&gt;)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Language&amp;nbsp;Bindings&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/StephanBeutel/RaspiLCD&#34;&gt;Java&lt;/a&gt;(&lt;a href=&#34;/media/zip/RaspiLCD-master.zip&#34;&gt;Mirror&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://bitbucket.org/Svedrin/raspilcd&#34;&gt;Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://web.archive.org/web/20150112053140/http://www.nook24.eu/?p=678&#34;&gt;&lt;span class=&#34;caps&#34;&gt;PHP&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/tillmo/raspi_lcd&#34;&gt;Ruby&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Projects&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/dbader/piradio&#34;&gt;piradio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/individual-it/RaspiLCDSysinfo&#34;&gt;RaspiLCD System&amp;nbsp;Information&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Misc&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;https://github.com/pboehm/libraspilcd&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Display&lt;/h1&gt;
&lt;p&gt;&lt;img alt=&#34;alt text&#34; src=&#34;/media/images/RaspiLCD-memory.png&#34; title=&#34;RaspiLCD Memory&#34; /&gt;&lt;/p&gt;
&lt;p&gt;The display used or its &lt;a href=&#34;/media/pdf/NT7532.pdf&#34;&gt;graphic controller&lt;/a&gt; is connected via &lt;span class=&#34;caps&#34;&gt;SPI&lt;/span&gt; interface. In the current version this is emulated in the software (-&amp;gt; no driver necessary). The display with its 128 x 64 pixels is in principle a 1kByte large memory, with which each bit corresponds to a pixel. In the software, the coordinates (x / y) correspond to the top left corner (0/0) and bottom right (127/63). Since the smallest organizational unit is one byte, 8 pixels are always transmitted and stored together. The least significant bit of the first byte is the origin in the upper left corner. Then follow for all 1024 bytes, the bits: D1 = (0/1), &amp;#8230; D7 = (0/7), etc. Since the memory of the display only describe, but not read, there is a small problem with the pixel-wise Presentation. Should a function change a single pixel, The other 7 bits of the associated byte must also be transferred. For this reason, a so-called frame buffer is implemented in the software. This is a 1: 1 memory image of the display. All operations are done with the framebuffer. With the function &lt;code&gt;LCD_WriteFramebuffer();&lt;/code&gt; then the output and display is done on the&amp;nbsp;display.&lt;/p&gt;
&lt;p&gt;Output of the text &amp;#8220;Hello&amp;nbsp;World&amp;#8221;:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;LCD_SetFont(0);
LCD_PrintXY(0,0, &#34;Hello World&#34;);&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Drawing a rectangle with transparent fill and two pixel line&amp;nbsp;width:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;LCD_SetFillColor(-1);
LCD_DrawRect(10,10,100,40,1);&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Bitmaps can be converted to C arrays using the &lt;span class=&#34;caps&#34;&gt;BMP2C&lt;/span&gt; V1.0 program  . eg: &lt;code&gt;const uint8 bmp_raspi [458] = {57, 64, 0×00, ... 0×00};&lt;/code&gt;
Output of bitmap at position(0/0):
&lt;code&gt;LCD_DrawBitmap(0,0, bmp_raspi);&lt;/code&gt;&lt;/p&gt;
&lt;h1&gt;Buttons&lt;/h1&gt;
&lt;p&gt;The individual keys switch to ground when the key is pressed. Since the corresponding &lt;span class=&#34;caps&#34;&gt;GPIO&lt;/span&gt; PINs are configured as an input with pullup, a depressed key means logical 0, an unpressed key logical&amp;nbsp;1.&lt;/p&gt;
&lt;p&gt;The function &lt;code&gt;UpdateButtons();&lt;/code&gt; ensures that the state of the buttons is stored in the two variables ButtonPressed and Button as one bit each. Macros such as: &lt;code&gt;BUTTON_PRESSED_UP&lt;/code&gt;, &lt;code&gt;BUTTON_PRESSED_RIGHT&lt;/code&gt;, &amp;#8230; allow comfortable use of the&amp;nbsp;keyboard.&lt;/p&gt;
&lt;h1&gt;Backlight&lt;/h1&gt;
&lt;p&gt;On the Raspi &lt;span class=&#34;caps&#34;&gt;LCD&lt;/span&gt; there is a switching transistor for controlling the &lt;span class=&#34;caps&#34;&gt;LED&lt;/span&gt; background illumination. The corresponding &lt;span class=&#34;caps&#34;&gt;GPIO&lt;/span&gt; pin can be set via the function &lt;code&gt;SetBacklight();&lt;/code&gt; be&amp;nbsp;controlled.&lt;/p&gt;            </content>
        </entry>
            <entry>
            <title type="html">2018 Wrap-up</title>
            <author><name>Matt, 2E1HNK</name></author>
            <link href="/blog/2018-wrapup.html"/>
            <updated>2018-12-31T23:59:59Z</updated>
            <published>2018-12-31T23:59:59Z</published>
            <id>/blog/2018-wrapup.html</id>
                        <category   scheme="/blog/tags"
                        term="UKAC"
                        label="Ukac" />
                        <category   scheme="/blog/tags"
                        term="FMAC"
                        label="Fmac" />
                        <category   scheme="/blog/tags"
                        term="Activation"
                        label="Activation" />
                        <category   scheme="/blog/tags"
                        term="HF"
                        label="Hf" />
                        <category   scheme="/blog/tags"
                        term="VHF"
                        label="Vhf" />
                        <category   scheme="/blog/tags"
                        term="DATA"
                        label="Data" />
            
            <content type="html">
                                &lt;p&gt;Total QSOs -&amp;nbsp;615&lt;/p&gt;
&lt;p&gt;Contests Entered -&amp;nbsp;14&lt;/p&gt;
&lt;p&gt;Best &lt;span class=&#34;caps&#34;&gt;DX&lt;/span&gt; - &lt;span class=&#34;caps&#34;&gt;WB2REM&lt;/span&gt; @ 4267.8km (30m &lt;span class=&#34;caps&#34;&gt;FT8&lt;/span&gt;)&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;caps&#34;&gt;UKAC&lt;/span&gt; Final Position - 304/733 (49/210 on&amp;nbsp;2m)&lt;/p&gt;            </content>
        </entry>
            <entry>
            <title type="html">Yaesu FT-857d CAT Settings</title>
            <author><name>Matt, 2E1HNK</name></author>
            <link href="/blog/ft857-cat-settings.html"/>
            <updated>2018-11-05T08:00:00Z</updated>
            <published>2018-11-05T08:00:00Z</published>
            <id>/blog/ft857-cat-settings.html</id>
                        <category   scheme="/blog/tags"
                        term="TechNote"
                        label="Technote" />
                        <category   scheme="/blog/tags"
                        term="FT857"
                        label="Ft857" />
            
            <content type="html">
                                &lt;p&gt;&lt;img alt=&#34;Yaesu FT-857d&#34; src=&#34;/media/images/ysu-ft-857d_xl.jpg&#34; /&gt;
Just parking this here because I can never find these settings when I need&amp;nbsp;them&amp;#8230;&lt;/p&gt;
&lt;p&gt;Baud: 4800, 9600, 38400 (must be 4800 with &lt;span class=&#34;caps&#34;&gt;LDG&lt;/span&gt;&amp;nbsp;tuner)&lt;/p&gt;
&lt;p&gt;Start Bits:&amp;nbsp;1&lt;/p&gt;
&lt;p&gt;Bits per Byte:&amp;nbsp;8&lt;/p&gt;
&lt;p&gt;Stop Bits:&amp;nbsp;2&lt;/p&gt;
&lt;p&gt;Parity:&amp;nbsp;None&lt;/p&gt;
&lt;p&gt;Flow Control:&amp;nbsp;?&lt;/p&gt;            </content>
        </entry>
            <entry>
            <title type="html">Finding Good Hill-Top Portable Sites (2)</title>
            <author><name>Matt, 2E1HNK</name></author>
            <link href="/blog/finding-good-hilltop-sites-2.html"/>
            <updated>2018-06-27T17:00:00Z</updated>
            <published>2018-06-27T17:00:00Z</published>
            <id>/blog/finding-good-hilltop-sites-2.html</id>
                        <category   scheme="/blog/tags"
                        term="TechNote"
                        label="Technote" />
                        <category   scheme="/blog/tags"
                        term="UKAC"
                        label="Ukac" />
                        <category   scheme="/blog/tags"
                        term="FMAC"
                        label="Fmac" />
            
            <content type="html">
                                &lt;p&gt;This is a quick update to the blog post about &lt;a href=&#34;/blog/finding-good-hilltop-sites.html&#34;&gt;Finding Good Hilltop Sites&lt;/a&gt;.
The Overpass &lt;span class=&#34;caps&#34;&gt;API&lt;/span&gt; code given in the original blog post didn&amp;#8217;t take into account the presence of points in the vacinity with a higher elevation that the point in question. That is to say that it would find &amp;#8216;good&amp;#8217; sites which were elevate and had road access but which might also have other land around which is more elevated than the site itself (think of something like a mountain pass - elevated but probably going between two large mountains). This update should resolve that by excluding any sites which have any features with a greated elevation within 2km of the&amp;nbsp;site.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;json&#34;&gt;
  [out:json][timeout:800];

  ( way({{bbox}})(if:t[&#34;ele&#34;] &gt; 250);
    node({{bbox}})(if:t[&#34;ele&#34;] &gt; 250);
    rel({{bbox}})(if:t[&#34;ele&#34;] &gt; 250);
  )-&gt;.summits;

  foreach.summits-&gt;.this_summit (
    ( node.summits(around.streets:2000)(if:t[&#34;ele&#34;] &gt; 250);
      way.summits(around.streets:2000)(if:t[&#34;ele&#34;] &gt; 250);
      rel.summits(around.streets:2000)(if:t[&#34;ele&#34;] &gt; 250);
    )-&gt;.prominence;

    if ( .prominence.count &lt; 1 ) {
      (.selected_summits; .this_summit;)-&gt;.selected_summits;
    }
  );

  way(around.selected_summits:100)[highway][highway!~&#34;^(footway|path|steps|bridleway|track|unclassified|cycleway|service)$&#34;]
    -&gt;.streets;

  ( node.selected_summits(around.streets:100);
    way.selected_summits(around.streets:100);
    rel.selected_summits(around.streets:100);
  )-&gt;.matchingSummits;

  (.matchingSummits; .streets;);
  out geom;
&lt;/code&gt;&lt;/pre&gt;            </content>
        </entry>
            <entry>
            <title type="html">Finding Good Hill-Top Portable Sites</title>
            <author><name>Matt, 2E1HNK</name></author>
            <link href="/blog/finding-good-hilltop-sites.html"/>
            <updated>2018-04-26T23:00:00Z</updated>
            <published>2018-04-26T23:00:00Z</published>
            <id>/blog/finding-good-hilltop-sites.html</id>
                        <category   scheme="/blog/tags"
                        term="TechNote"
                        label="Technote" />
                        <category   scheme="/blog/tags"
                        term="UKAC"
                        label="Ukac" />
                        <category   scheme="/blog/tags"
                        term="FMAC"
                        label="Fmac" />
            
            <content type="html">
                                &lt;p&gt;Finding good portable operating sites historically relied on local
knowledge, anecdotal evidence from other amateurs, plenty of
experimentation and a good dose of luck. Whilst there&amp;#8217;s nothing
wrong with this approach it does rely on either knowing the local
area well, or having contact with someone who does. This isn&amp;#8217;t
always available, for example holiday operation, moving to a new
area or simply that all the good peaks have been taken. There must
be a better way&amp;#8230;
My approach to finding new hilltops to
activate involves finding candidate hilltops, assessing whether
operation is possible from that location, and then working out
whether it&amp;#8217;s worth the effort of attempting to activate it. These
are some of the resources I use to do&amp;nbsp;this.&lt;/p&gt;
&lt;h3&gt;Find Candidate&amp;nbsp;Sites&lt;/h3&gt;
&lt;h4&gt;Overpass&amp;nbsp;Turbo&lt;/h4&gt;
&lt;p&gt;&lt;a href=&#34;http://overpass-turbo.eu&#34;&gt;Overpass Turbo&lt;/a&gt; allows users to run scripts against the Overpass &lt;span class=&#34;caps&#34;&gt;API&lt;/span&gt;, part
of the OpenStreetMap project. The script below finds ways, nodes
and relationships (i.e. any object) with an elevation greater
than 300m a.s.l (which works well for the area I&amp;#8217;m interested in,
depending on your local area you might need to change this). It
then searches the area around those objects up to a radius to
100m (you can tune this too, if you need to) to see if there are
any highways, but excluding footpaths, bridleways, tracks,
service roads, unclassified roads etc. This theoretically returns
a list/map of summits which are accessible by&amp;nbsp;car.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;json&#34;&gt;
[out:json][timeout:800];
(
  way()(if:t[&#34;ele&#34;] &gt; 300);
  node()(if:t[&#34;ele&#34;] &gt; 300);
  rel()(if:t[&#34;ele&#34;] &gt; 300);
)-&gt;.summits;

way
  (around.summits:100)
  [highway]
  [highway!~&#34;^(footway|path|bridleway|track|unclassified|cycleway|service)$&#34;]
-&gt;.streets;

(
  node.summits(around.streets:100);
  way.summits(around.streets:100);
  rel.summits(around.streets:100);
)-&gt;.matchingSummits;

(.matchingSummits; .streets;);
out geom;
&lt;/code&gt;&lt;/pre&gt;

&lt;h4&gt;UKACMap&lt;/h4&gt;
&lt;p&gt;&lt;a href=&#34;ukacmap.html&#34;&gt;UKACMap&lt;/a&gt; queries the Google
Maps &lt;span class=&#34;caps&#34;&gt;API&lt;/span&gt; to try to find the highest point in view. In some ways
this is more reliable that the OverPass &lt;span class=&#34;caps&#34;&gt;API&lt;/span&gt; approach as the
Google Maps elevation data comes from surveys rather than
user-entered data, however there are limitations in how many
times the Google Maps &lt;span class=&#34;caps&#34;&gt;API&lt;/span&gt; can be queried, so the application is
not as accurate as it could&amp;nbsp;be.&lt;/p&gt;
&lt;h3&gt;Assess&amp;nbsp;Accessability&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Is the land privately&amp;nbsp;owned?&lt;/li&gt;
&lt;li&gt;Is it possible to get a vehicle to the&amp;nbsp;site?&lt;/li&gt;
&lt;li&gt;Are there time restrictions (for example a car park that closes at&amp;nbsp;dusk)?&lt;/li&gt;
&lt;li&gt;Is there sufficient space to set up&amp;nbsp;antennas?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The answers to many of these questions can be found using online
mapping services including &lt;a href=&#34;https://www.bing.com/maps&#34;&gt;Bing Maps&lt;/a&gt; which has Ordnance Survey maps available and Google Maps
which has aerial photography and also Google&amp;#8217;s fantastic Street
View&amp;nbsp;service.&lt;/p&gt;
&lt;h3&gt;Assess Radio&amp;nbsp;Coverage&lt;/h3&gt;
&lt;p&gt;Of cource there&amp;#8217;s no point investing time and energy into
climbing a peak is it&amp;#8217;s not going to give you the coverage you
need.
&lt;a href=&#34;http://www.ve2dbe.com/rmonline.html&#34;&gt;Radio Mobile Online&lt;/a&gt; (and also the offline version) and Splat! are fantastic
tools for assessing a site&amp;#8217;s radio coverage. Their use cannot be
described briefly here but there are plenty of tutorials
available. One I particularly like for Radio Mobile&amp;#8217;s offline
versions can be found &lt;a href=&#34;http://radiomobile.pe1mew.nl/?How_to:A_first_example&#34;&gt;here&lt;/a&gt;&lt;/p&gt;            </content>
        </entry>
            <entry>
            <title type="html">Yaesu FT-857d Power Output Stuck</title>
            <author><name>Matt, 2E1HNK</name></author>
            <link href="/blog/ft857-power-output-stuck.html"/>
            <updated>2018-04-04T23:00:00Z</updated>
            <published>2018-04-04T23:00:00Z</published>
            <id>/blog/ft857-power-output-stuck.html</id>
                        <category   scheme="/blog/tags"
                        term="TechNote"
                        label="Technote" />
                        <category   scheme="/blog/tags"
                        term="FT857"
                        label="Ft857" />
            
            <content type="html">
                                &lt;p&gt;&lt;img alt=&#34;Yaesu FT-857d&#34; src=&#34;/media/images/ysu-ft-857d_xl.jpg&#34; /&gt;
I fired up my Yaesu FT857d to take part in the &lt;span class=&#34;caps&#34;&gt;RSGB&lt;/span&gt;&amp;#8217;s April 2018 2m
&lt;span class=&#34;caps&#34;&gt;UKAC&lt;/span&gt; Contest a couple of days ago to discover that the &lt;span class=&#34;caps&#34;&gt;RF&lt;/span&gt; power
output (Menu Option 75) was stuck at 50W and wouldn&amp;#8217;t change by
rotating the &lt;span class=&#34;caps&#34;&gt;VFO&lt;/span&gt; knob as it should.
Thankfully, despite being /P, I
was in an area with good mobile coverage I had a quick google and
although I found a few others who had experienced a few similar
&lt;a href=&#34;http://www.eham.net/ehamforum/smf/index.php?topic=74837.0&#34;&gt;issues&lt;/a&gt;,
there was only one viable suggestion for resolving the problem,
which was to perform a reset. There are three variations of reset
available on an FT857d detailed &lt;a href=&#34;https://www.hamradio.hanklambert.com/8-ham-radio/23-yaesu-ft-857d-reset-procedures&#34;&gt;here&lt;/a&gt;.
It was the &lt;span class=&#34;caps&#34;&gt;FUNC&lt;/span&gt; + &lt;span class=&#34;caps&#34;&gt;PWR&lt;/span&gt; one that worked for me, however it wasn&amp;#8217;t
clear to me that this is a power-on reset, so the rig has to be off
for it to work. There is a sort of &amp;#8216;confirmation beep&amp;#8217; to indicate
that the memory has been reset and you&amp;#8217;ll also notice that the &lt;span class=&#34;caps&#34;&gt;VFO&lt;/span&gt;
will probably have changed (in my case it reset to&amp;nbsp;7MHz).&lt;/p&gt;            </content>
        </entry>
    </feed>